{"version":3,"sources":["_drawer.js","_bp.js","_fixed.js","_scrollTop.js","_smoothScroll.js","_accordion.js","_animeation.js","_function.js","_swiper.js","_vivus.js","_vw.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["/**\n * ドロワーメニュー\n * @name drawerMenu\n */\nfunction drawerMenu() {\n  $('#js-hamburger').on('click', function () {\n    const $expanded = $(this).attr('aria-expanded'); //aria-expandedの値を変数expandedに格納\n\n    if ($expanded === 'false') {\n      $(this).attr('aria-expanded', true).attr('aria-label', 'メニューを閉じる'); //対象メニューの展開ステートをtrueにし、labelを「閉じる」に変更\n      $('#js-gnav').attr('aria-hidden', false).fadeIn(300); //メニューのhiddenステートをfalseにしてメニューを表示\n      $('body').toggleClass('is-active');\n\n      $('.js-gnav-trigger').each(function () {\n        $(this).addClass('is-blur');\n      });\n    } else {\n      $(this).attr('aria-expanded', false).attr('aria-label', 'メニューを開く'); //対象メニューの展開ステートをfalseにし、labelを「開く」に変更\n      $('#js-gnav').attr('aria-hidden', true).fadeOut(300); //メニューのhiddenステートをtrueにしてメニューを閉じる\n      $('body').toggleClass('is-active');\n    }\n  });\n};\n","/**\n * ブレイクポイントをまたいだ時にaria属性も動的に設定する関数\n * @name checkBreakPoint\n */\nfunction checkBreakPoint() {\n  const $windowWidth = $(window).width(); // 幅を一度だけ取得\n  if ($windowWidth >= 768) {\n    $('#js-gnav').attr('aria-hidden', false).show(); //グロナビを表示\n  } else {\n    //スマホレイアウトの初期状態にリセット\n    $('#js-hamburger').attr('aria-expanded', false).attr('aria-label', 'メニューを開く');\n    $('#js-gnav').attr('aria-hidden', true).hide();\n  }\n}\n","/**\n * ヘッダー固定\n * @name headerFixed\n */\nfunction headerFixed(){\n  const $hamburger = $('.c-hamburger');\n  const $headerHeight = $('.p-header').height();\n  const $height = $('.js-mv-height').height();\n\n  if ($(this).scrollTop() > $height - $headerHeight) {\n    $hamburger.addClass('is-fixed');\n  } else {\n    $hamburger.removeClass('is-fixed');\n  }\n}\n","/**\n * ページトップへ戻る\n * @name scrollTop\n */\nfunction scrollTop () {\n  $('.js-page-top').click(function () {\n    $('body,html').animate(\n      {\n        scrollTop: 0,\n      },\n      800,\n      'swing'\n    );\n    return false;\n  });\n};\n","/**\n * スムーススクロール\n * @name smoothScroll\n */\nfunction smoothScroll() {\n  $(function () {\n    const $time = 800; // スクロールアニメーションにかかる時間（ミリ秒）\n    const $headerHightPc = 40; // ヘッダーの高さ（ピクセル）\n    const $headerHightSp = 8; // ヘッダーの高さ（ピクセル）\n    // ヘッダーの高さの分の場合はこちらを使用\n    // const $headerHight = $('header').innerHeight();\n\n    $(document).on('click', 'a[href*=\"#\"]', function () {\n      const $target = $(this.hash); // クリックされたリンクのハッシュ部分の要素を取得\n      if (!$target.length) return; // 要素が存在しない場合は処理を中断\n      const $targetY = $target.offset().top - $headerHightPc; // 要素の位置までのスクロール量を計算\n      $('html,body').animate({ scrollTop: $targetY }, $time, 'swing'); // スクロールアニメーションを実行\n      return false;\n    });\n\n    const $urlHash = location.hash; // URLのハッシュ部分を取得\n    if (!$urlHash.length) return; // ハッシュ部分が存在しない場合は処理を中断\n    $('body,html').stop().scrollTop(0); // ページの先頭にスクロール\n    setTimeout(function () {\n      const $target = $($urlHash); // ハッシュ部分の要素を取得\n      const $targetY = $target.offset().top - $headerHightSp; // 要素の位置までのスクロール量を計算\n      $('body,html').stop().animate({ scrollTop: $targetY }, $time, 'swing'); // スクロールアニメーションを実行\n    }, 100);\n\n    // アコーディオンを開く\n    $($urlHash).find('.js-accordion-title').addClass('is-open'); // アコーディオンの矢印を回転\n    $($urlHash).find('.js-accordion-area').show(); // アコーディオンを開く\n  });\n}\n","/**\n * アコーディオン\n * @name accordionMenu\n */\nfunction accordionMenu() {\n  $('.js-accordion-title').on('click', function () {\n    if ($(window).width() >= 768) {\n      return; // ブレークポイントがマッチする場合は処理を終了\n    }\n\n    const $accordionAreaElm = $(this).next('.js-accordion-area'); // 直後のアコーディオンを行うエリアを取得\n\n    $accordionAreaElm.slideToggle(); // アコーディオンの上下動作\n\n    $(this).toggleClass('is-open'); // クラス名closeの追加・削除をトグルする\n    $accordionAreaElm.toggleClass('is-show'); // クラス名closeの追加・削除をトグルする\n  });\n  if ($(window).width() <= 768) { // ウィンドウの幅が768以下の場合\n    $('.js-accordion-area').hide(); // cssのdisplay: grid;が無効になるので、jsで非表示にする\n    // $('.p-menus-sec:first-of-type .js-accordion-title').addClass('is-open'); // 最初のアコーディオンを開いておく\n    // $('.p-menus-sec:first-of-type .js-accordion-area').addClass('is-show').show(); // 最初のアコーディオンを開いておく\n  }\n}\n","/**\n * フェードアニメーション\n * @name fadeAnime\n */\nfunction fadeAnime() {\n  $('.js-blurTrigger').each(function () {\n    const elemPos = $(this).offset().top - 50;\n    const scroll = $(window).scrollTop();\n    const windowHeight = $(window).height();\n    if (scroll >= elemPos - windowHeight) {\n      $(this).addClass('is-blur');\n    }\n    // else {\n    //   $(this).removeClass('is-blur');\n    // }\n  });\n}\n\n/**\n * ロードアニメーション\n * @name loadAnime\n */\n// function loadAnime() {\n//   $('.blurTrigger--load').each(function () {\n//     const elemPos = $(this).offset().top - 50;\n//     const scroll = $(window).scrollTop();\n//     const windowHeight = $(window).height();\n//     if (scroll >= elemPos - windowHeight) {\n//       $(this).addClass('is-blur');\n//     } else {\n//       $(this).removeClass('is-blur');\n//     }\n//   });\n// }\n","/**\n * 関数をまとめる\n */\ndrawerMenu();\naccordionMenu();\nscrollTop();\nsmoothScroll();\n\n/**\n * スクロールイベントが発生した時に呼ばれる関数。\n */\n$(window).scroll(function () {\n  fadeAnime()\n  headerFixed();\n});\n\n/**\n * ページが読み込まれた時に呼ばれる関数。\n */\n$(window).on(\"load\", function () {\n    $('#js-splash').delay(3000).fadeOut('slow'); //ローディング画面を待機してからフェイドアウト\n    $('#js-splash_logo').delay(3000).fadeOut('slow'); //ロゴを待機してからフェイドアウト\n    fadeAnime();\n    // stroke.play();\n});\n\n/**\n * ウィンドウのサイズが変更された時に呼ばれる関数。\n */\n$(window).resize(function () {\n  checkBreakPoint();\n});\n","/**\n * トップページmainvisualのSwiper\n */\nconst topMvSwiper = new Swiper('.js-top-mv-swiper', {\n  loop: true,\n  effect: 'fade', // フェード切り替え\n  // 自動再生\n  autoplay: {\n    delay: 4000, // 4秒後に次のスライドへ\n    disableOnInteraction: false, // ユーザーが操作しても自動再生を継続\n  },\n  speed: 2000,\n  // pagination: {\n  //   el: '.swiper-pagination',\n  //   clickable: true,\n  // },\n});\n\n/**\n * トップページgenteiのSwiper\n */\nconst topGenteiSwiper = new Swiper('.js-top-gentei-swiper', {\n  loop: true,\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n  pagination: {\n    el: '.p-top-gentei__pagination', // ページネーションのクラス名を指定\n    type: 'fraction',\n  },\n  spaceBetween: '13%',\n  slidesPerView: 1.5,\n  breakpoints: {\n    420: {\n      spaceBetween: '6%',\n      slidesPerView: 2.5,\n    },\n    576: {\n      spaceBetween: '4%',\n      slidesPerView: 3.5,\n    },\n    768: {\n      spaceBetween: '3%',\n      slidesPerView: 4.5,\n    },\n    1400: {\n      spaceBetween: '2.5%',\n      slidesPerView: 4.5,\n    }\n  },\n});\n","// const splash_text = $.cookie('accessdate'); //キーが入っていれば年月日を取得\n// const myD = new Date(); //日付データを取得\n// const myYear = String(myD.getFullYear()); //年\n// const myMonth = String(myD.getMonth() + 1); //月\n// const myDate = String(myD.getDate()); //日\n// console.log(splash_text);\n\n/**\n * Vivus\n */\n// var stroke;\n// if (splash_text != myYear + myMonth + myDate) {\n//   stroke = new Vivus('js-mask', {\n//     //アニメーションをするIDの指定\n//     start: 'manual', //自動再生をせずスタートをマニュアルに\n//     type: 'scenario-sync', // アニメーションのタイプを設定\n//     duration: 70, //アニメーションの時間設定。数字が小さくなるほど速い\n//     forceRender: false, //パスが更新された場合に再レンダリングさせない\n//     animTimingFunction: Vivus.EASE_OUT, //動きの加速減速設定\n//   });\n// }\n// else {\n\n// }\n\n// const stroke = new Vivus('js-mask', {\n//   //アニメーションをするIDの指定\n//   start: 'manual', //自動再生をせずスタートをマニュアルに\n//   type: 'scenario-sync', // アニメーションのタイプを設定\n//   duration: 70, //アニメーションの時間設定。数字が小さくなるほど速い\n//   forceRender: false, //パスが更新された場合に再レンダリングさせない\n//   animTimingFunction: Vivus.EASE_OUT, //動きの加速減速設定\n// });\n","/**\n * ビューポートの設定\n *\n * ウィンドウの幅が360より大きい場合はビューポートを初期縮尺率で設定し、それ以外の場合はビューポートの幅を360に設定します。\n */\n!(function () {\n  const viewport = document.querySelector('meta[name=\"viewport\"]');\n\n  function switchViewport() {\n    // ウィンドウの幅が360より大きい場合、ビューポートを初期縮尺率で設定する\n    // それ以外の場合は、ビューポートの幅を360に設定する\n    const value = window.outerWidth > 360 ? 'width=device-width,initial-scale=1' : 'width=360';\n\n    // ビューポートのcontent属性がvalueと異なる場合、valueに更新する\n    if (viewport.getAttribute('content') !== value) {\n      viewport.setAttribute('content', value);\n    }\n  }\n  // ウィンドウのリサイズ時にswitchViewport関数を呼び出す\n  addEventListener('resize', switchViewport, false);\n\n  // 初回読み込み時にswitchViewport関数を呼び出す\n  switchViewport();\n})();\n"]}