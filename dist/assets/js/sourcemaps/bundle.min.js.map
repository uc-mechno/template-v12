{"version":3,"sources":["_drawer.js","_bp.js","_fixed.js","_scrollTop.js","_smoothScroll.js","_accordion.js","_animeation.js","_function.js","_swiper.js","_vivus.js","_vw.js"],"names":["drawerMenu","$","on","this","attr","fadeIn","toggleClass","each","addClass","fadeOut","checkBreakPoint","window","width","show","hide","headerFixed","$hamburger","$headerHeight","height","$height","scrollTop","removeClass","click","animate","smoothScroll","document","$target","hash","length","$targetY","offset","top","$urlHash","location","stop","setTimeout","find","accordionMenu","$accordionAreaElm","next","slideToggle","fadeAnime","elemPos","scroll","delay","resize","topMvSwiper","Swiper","loop","effect","autoplay","disableOnInteraction","speed","topNewsSwiper","navigation","nextEl","prevEl","spaceBetween","slidesPerView","breakpoints","stroke","Vivus","start","type","duration","forceRender","animTimingFunction","EASE_OUT","play","viewport","querySelector","switchViewport","value","outerWidth","getAttribute","setAttribute","addEventListener"],"mappings":"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","file":"bundle.min.js","sourcesContent":["/* --------------------------------------------------------------\n>>> TABLE OF CONTENTS:\n----------------------------------------------------------------\n# drawerMenu\n# checkBreakPoint\n# headerFixed\n# smoothScroll\n# accordionMenu\n# fadeAnime\n# swiper\n  - topMvSwiper\n  - topNewsSwiper\n# Vivus\n# switchViewport\n*/\n\n/**\n * ドロワーメニュー\n * @name drawerMenu\n */\nfunction drawerMenu() {\n  $('#js-hamburger').on('click', function () {\n    const $expanded = $(this).attr('aria-expanded'); //aria-expandedの値を変数expandedに格納\n\n    if ($expanded === 'false') {\n      $(this).attr('aria-expanded', true).attr('aria-label', 'メニューを閉じる'); //対象メニューの展開ステートをtrueにし、labelを「閉じる」に変更\n      $('#js-gnav').attr('aria-hidden', false).fadeIn(300); //メニューのhiddenステートをfalseにしてメニューを表示\n      $('body').toggleClass('is-active');\n\n      $('.blurTrigger').each(function () {\n        $(this).addClass('blur');\n      });\n    } else {\n      $(this).attr('aria-expanded', false).attr('aria-label', 'メニューを開く'); //対象メニューの展開ステートをfalseにし、labelを「開く」に変更\n      $('#js-gnav').attr('aria-hidden', true).fadeOut(300); //メニューのhiddenステートをtrueにしてメニューを閉じる\n      $('body').toggleClass('is-active');\n    }\n  });\n};\n","/**\n * ブレイクポイントをまたいだ時にaria属性も動的に設定する関数\n * @name checkBreakPoint\n */\nfunction checkBreakPoint() {\n  const $windowWidth = $(window).width(); // 幅を一度だけ取得\n  if ($windowWidth >= 768) {\n    $('#js-gnav').attr('aria-hidden', false).show(); //グロナビを表示\n  } else {\n    //スマホレイアウトの初期状態にリセット\n    $('#js-hamburger').attr('aria-expanded', false).attr('aria-label', 'メニューを開く');\n    $('#js-gnav').attr('aria-hidden', true).hide();\n  }\n}\n","/**\n * ヘッダー固定\n * @name headerFixed\n */\nfunction headerFixed(){\n  const $hamburger = $('.c-hamburger');\n  const $headerHeight = $('.p-header').height();\n  const $height = $('.js-mv-height').height();\n\n  if ($(this).scrollTop() > $height - $headerHeight) {\n    $hamburger.addClass('is-fixed');\n  } else {\n    $hamburger.removeClass('is-fixed');\n  }\n}\n","/**\n * ページトップへ戻る\n * @name scrollTop\n */\nfunction scrollTop () {\n  $('.js-page-top').click(function () {\n    $('body,html').animate(\n      {\n        scrollTop: 0,\n      },\n      800,\n      'swing'\n    );\n    return false;\n  });\n};\n","/**\n * スムーススクロール\n * @name smoothScroll\n */\nfunction smoothScroll() {\n  $(function () {\n    const $time = 800; // スクロールアニメーションにかかる時間（ミリ秒）\n    const $headerHightPc = 40; // ヘッダーの高さ（ピクセル）\n    const $headerHightSp = 8; // ヘッダーの高さ（ピクセル）\n    // ヘッダーの高さの分の場合はこちらを使用\n    // const $headerHight = $('header').innerHeight();\n\n    $(document).on('click', 'a[href*=\"#\"]', function () {\n      const $target = $(this.hash); // クリックされたリンクのハッシュ部分の要素を取得\n      if (!$target.length) return; // 要素が存在しない場合は処理を中断\n      const $targetY = $target.offset().top - $headerHightPc; // 要素の位置までのスクロール量を計算\n      $('html,body').animate({ scrollTop: $targetY }, $time, 'swing'); // スクロールアニメーションを実行\n      return false;\n    });\n\n    const $urlHash = location.hash; // URLのハッシュ部分を取得\n    if (!$urlHash.length) return; // ハッシュ部分が存在しない場合は処理を中断\n    $('body,html').stop().scrollTop(0); // ページの先頭にスクロール\n    setTimeout(function () {\n      const $target = $($urlHash); // ハッシュ部分の要素を取得\n      const $targetY = $target.offset().top - $headerHightSp; // 要素の位置までのスクロール量を計算\n      $('body,html').stop().animate({ scrollTop: $targetY }, $time, 'swing'); // スクロールアニメーションを実行\n    }, 100);\n\n    // アコーディオンを開く\n    $($urlHash).find('.js-accordion-title').addClass('is-open'); // アコーディオンの矢印を回転\n    $($urlHash).find('.js-accordion-area').show(); // アコーディオンを開く\n  });\n}\n","/**\n * アコーディオン\n * @name accordionMenu\n */\nfunction accordionMenu() {\n  $('.js-accordion-title').on('click', function () {\n    if ($(window).width() >= 768) {\n      return; // ブレークポイントがマッチする場合は処理を終了\n    }\n\n    const $accordionAreaElm = $(this).next('.js-accordion-area'); // 直後のアコーディオンを行うエリアを取得\n\n    $accordionAreaElm.slideToggle(); // アコーディオンの上下動作\n\n    $(this).toggleClass('is-open'); // クラス名closeの追加・削除をトグルする\n    $accordionAreaElm.toggleClass('is-show'); // クラス名closeの追加・削除をトグルする\n  });\n  if ($(window).width() <= 768) { // ウィンドウの幅が768以下の場合\n    $('.js-accordion-area').hide(); // cssのdisplay: grid;が無効になるので、jsで非表示にする\n    // $('.p-menus-sec:first-of-type .js-accordion-title').addClass('is-open'); // 最初のアコーディオンを開いておく\n    // $('.p-menus-sec:first-of-type .js-accordion-area').addClass('is-show').show(); // 最初のアコーディオンを開いておく\n  }\n}\n","/**\n * フェードアニメーション\n * @name fadeAnime\n */\nfunction fadeAnime() {\n  $('.blurTrigger').each(function () {\n    const elemPos = $(this).offset().top - 50;\n    const scroll = $(window).scrollTop();\n    const windowHeight = $(window).height();\n    if (scroll >= elemPos - windowHeight) {\n      $(this).addClass('blur');\n    } else {\n      $(this).removeClass('blur');\n    }\n  });\n\n  $('.lineTrigger').each(function () {\n    const elemPos = $(this).offset().top - 50;\n    const scroll = $(window).scrollTop();\n    const windowHeight = $(window).height();\n    if (scroll >= elemPos - windowHeight) {\n      $(this).addClass('lineanime');\n    } else {\n      $(this).removeClass('lineanime');\n    }\n  });\n}\n","/**\n * 関数をまとめる\n */\ndrawerMenu();\naccordionMenu();\nscrollTop();\nsmoothScroll();\n\n/**\n * スクロールイベントが発生した時に呼ばれる関数。\n */\n$(window).scroll(function () {\n  fadeAnime()\n  headerFixed();\n});\n\n/**\n * ページが読み込まれた時に呼ばれる関数。\n */\n$(window).on(\"load\", function () {\n    $('#js-splash').delay(3000).fadeOut('slow'); //ローディング画面を待機してからフェイドアウト\n    $('#js-splash_logo').delay(3000).fadeOut('slow'); //ロゴを待機してからフェイドアウト\n    // stroke.play(); //SVGアニメーションの実行\n});\n\n/**\n * ウィンドウのサイズが変更された時に呼ばれる関数。\n */\n$(window).resize(function () {\n  checkBreakPoint();\n});\n","\n/**\n * トップページmainvisualのSwiper\n */\nconst topMvSwiper = new Swiper('.js-top-mv-swiper', {\n  loop: true,\n  effect: 'fade', // フェード切り替え\n  // 自動再生\n  autoplay: {\n    delay: 4000, // 4秒後に次のスライドへ\n    disableOnInteraction: false, // ユーザーが操作しても自動再生を継続\n  },\n  speed: 2000,\n  // pagination: {\n  //   el: '.swiper-pagination',\n  //   clickable: true,\n  // },\n});\n\n/**\n * トップページnewsのSwiper\n */\nconst topNewsSwiper = new Swiper('.js-top-news-swiper', {\n  loop: true,\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n  spaceBetween: '2.5%',\n  slidesPerView: 2.5,\n  breakpoints: {\n    768: {\n      spaceBetween: '2.5%',\n      slidesPerView: 3.5,\n    },\n    1400: {\n      spaceBetween: '2.5%',\n      slidesPerView: 4,\n    },\n  },\n});\n","/**\n * Vivus\n */\n// var stroke;\nconst stroke = new Vivus('js-mask', {\n  //アニメーションをするIDの指定\n  start: 'manual', //自動再生をせずスタートをマニュアルに\n  type: 'scenario-sync', // アニメーションのタイプを設定\n  duration: 70, //アニメーションの時間設定。数字が小さくなるほど速い\n  forceRender: false, //パスが更新された場合に再レンダリングさせない\n  animTimingFunction: Vivus.EASE_OUT, //動きの加速減速設定\n});\n\n$(window).on(\"load\", function () {\n  stroke.play(); //SVGアニメーションの実行\n});\n","/**\n * ビューポートの設定\n *\n * ウィンドウの幅が360より大きい場合はビューポートを初期縮尺率で設定し、それ以外の場合はビューポートの幅を360に設定します。\n */\n!(function () {\n  const viewport = document.querySelector('meta[name=\"viewport\"]');\n\n  function switchViewport() {\n    // ウィンドウの幅が360より大きい場合、ビューポートを初期縮尺率で設定する\n    // それ以外の場合は、ビューポートの幅を360に設定する\n    const value = window.outerWidth > 360 ? 'width=device-width,initial-scale=1' : 'width=360';\n\n    // ビューポートのcontent属性がvalueと異なる場合、valueに更新する\n    if (viewport.getAttribute('content') !== value) {\n      viewport.setAttribute('content', value);\n    }\n  }\n  // ウィンドウのリサイズ時にswitchViewport関数を呼び出す\n  addEventListener('resize', switchViewport, false);\n\n  // 初回読み込み時にswitchViewport関数を呼び出す\n  switchViewport();\n})();\n"]}